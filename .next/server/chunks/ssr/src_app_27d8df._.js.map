{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/helpers/ms-convert.ts"],"sourcesContent":["\r\nexport function toTimeString(ms: number): string {\r\n    const seconds = Math.floor(ms / 1000)\r\n    const minutes = Math.floor(seconds / 60)\r\n    const hours = Math.floor(minutes / 60)\r\n    const remainingSeconds = seconds % 60\r\n\r\n    const output = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`\r\n    if (hours > 0) {\r\n        return `${hours}:${minutes < 10 ? '0' : ''}${output}`\r\n    }\r\n    return output\r\n}\r\n\r\nexport function toTimeStringSeconds(seconds: number): string {\r\n    const minutes = Math.floor(seconds / 60)\r\n    const remainingSeconds = seconds % 60\r\n    const hours = Math.floor(minutes / 60)\r\n\r\n    const output = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`\r\n    if (hours > 0) {\r\n        return `${hours}:${minutes < 10 ? '0' : ''}${output}`\r\n    }\r\n    return output\r\n}\r\n\r\n\r\nexport function toMs(timeString: string): number {\r\n    const [hours, minutes, seconds] = timeString.split(':').map(Number)\r\n    return (hours * 60 * 60 + minutes * 60 + seconds) * 1000\r\n}\r\n\r\nexport function toSecs(timeString: string): number {\r\n    console.log(\"timeString: \", timeString)\r\n    const [hours, minutes, seconds] = timeString.split(':').map(Number)\r\n    return (hours * 60 * 60 + minutes * 60 + seconds)\r\n}\r\n"],"names":[],"mappings":";;;;;;AACO,SAAS,aAAa,EAAU;IACnC,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK;IAChC,MAAM,UAAU,KAAK,KAAK,CAAC,UAAU;IACrC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IACnC,MAAM,mBAAmB,UAAU;IAEnC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,mBAAmB,KAAK,MAAM,KAAK,kBAAkB;IAClF,IAAI,QAAQ,GAAG;QACX,OAAO,GAAG,MAAM,CAAC,EAAE,UAAU,KAAK,MAAM,KAAK,QAAQ;IACzD;IACA,OAAO;AACX;AAEO,SAAS,oBAAoB,OAAe;IAC/C,MAAM,UAAU,KAAK,KAAK,CAAC,UAAU;IACrC,MAAM,mBAAmB,UAAU;IACnC,MAAM,QAAQ,KAAK,KAAK,CAAC,UAAU;IAEnC,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,mBAAmB,KAAK,MAAM,KAAK,kBAAkB;IAClF,IAAI,QAAQ,GAAG;QACX,OAAO,GAAG,MAAM,CAAC,EAAE,UAAU,KAAK,MAAM,KAAK,QAAQ;IACzD;IACA,OAAO;AACX;AAGO,SAAS,KAAK,UAAkB;IACnC,MAAM,CAAC,OAAO,SAAS,QAAQ,GAAG,WAAW,KAAK,CAAC,KAAK,GAAG,CAAC;IAC5D,OAAO,CAAC,QAAQ,KAAK,KAAK,UAAU,KAAK,OAAO,IAAI;AACxD;AAEO,SAAS,OAAO,UAAkB;IACrC,QAAQ,GAAG,CAAC,gBAAgB;IAC5B,MAAM,CAAC,OAAO,SAAS,QAAQ,GAAG,WAAW,KAAK,CAAC,KAAK,GAAG,CAAC;IAC5D,OAAQ,QAAQ,KAAK,KAAK,UAAU,KAAK;AAC7C"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/playlists/%5Bid%5D/Tracks.tsx"],"sourcesContent":["\"use client\";\r\nimport getCookies from \"@/app/helpers/get-cookies\";\r\nimport { toTimeString, toTimeStringSeconds } from \"@/app/helpers/ms-convert\";\r\nimport { FullPlaylist } from \"@/types/Playlist\"\r\nimport { Track } from \"@/types/Track\";\r\nimport { ChevronUpIcon, ChevronDownIcon } from \"@heroicons/react/16/solid\";\r\nimport { Card, Button } from \"@nextui-org/react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ntype TracksProps = {\r\n    playlist: FullPlaylist,\r\n    setPlaylist: (playlist: FullPlaylist) => void\r\n}\r\n\r\nexport default function Tracks(props: TracksProps) {\r\n    const { playlist, setPlaylist } = props\r\n    \r\n    const swapTracks = (index_1: number, index_2: number) => {\r\n        const newTracks: Track[] = [...playlist.tracks];\r\n        [newTracks[index_1], newTracks[index_2]] = [newTracks[index_2], newTracks[index_1]];\r\n        setPlaylist({ ...playlist, tracks: newTracks });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"w-1/2 flex flex-col flex-grow m-2 p-4 space-y-2 rounded-xl bg-neutral-800\">\r\n            {playlist.tracks.map((track, index) => (\r\n                <div className=\"flex flex-row\" key={index}>\r\n                    <Card className=\"bg-white flex flex-row px-4 py-2 justify-between w-4/5\">\r\n                        <p>{index + 1}</p>\r\n                        <p>{track.name}</p>\r\n                        <p>{toTimeStringSeconds(track.seconds)}</p>\r\n                    </Card>\r\n                    <div className=\"items-center justify-center flex flex-row w-1/5\">\r\n                        { index > 0 && (\r\n                            <Button isIconOnly onPress={() => {swapTracks(index, index-1)}} variant=\"light\">\r\n                                <ChevronUpIcon className=\"w-8 h-8\" />\r\n                            </Button>\r\n                        )}\r\n                        { index < playlist.tracks.length - 1 && (\r\n                            <Button isIconOnly onPress={() => swapTracks(index, index+1)} variant=\"light\">\r\n                                <ChevronDownIcon className=\"w-8 h-8\" />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAEA;AAIA;AAAA;AADA;AAAA;AALA;;;;;AAce,SAAS,OAAO,KAAkB;IAC7C,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG;IAElC,MAAM,aAAa,CAAC,SAAiB;QACjC,MAAM,YAAqB;eAAI,SAAS,MAAM;SAAC;QAC/C,CAAC,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,GAAG;YAAC,SAAS,CAAC,QAAQ;YAAE,SAAS,CAAC,QAAQ;SAAC;QACnF,YAAY;YAAE,GAAG,QAAQ;YAAE,QAAQ;QAAU;IACjD;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACV,SAAS,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,sBACzB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,6MAAA,CAAA,OAAI;wBAAC,WAAU;;0CACZ,8OAAC;0CAAG,QAAQ;;;;;;0CACZ,8OAAC;0CAAG,MAAM,IAAI;;;;;;0CACd,8OAAC;0CAAG,CAAA,GAAA,sIAAA,CAAA,sBAAmB,AAAD,EAAE,MAAM,OAAO;;;;;;;;;;;;kCAEzC,8OAAC;wBAAI,WAAU;;4BACT,QAAQ,mBACN,8OAAC,mNAAA,CAAA,SAAM;gCAAC,UAAU;gCAAC,SAAS;oCAAO,WAAW,OAAO,QAAM;gCAAE;gCAAG,SAAQ;0CACpE,cAAA,8OAAC,uNAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;;;;;;4BAG/B,QAAQ,SAAS,MAAM,CAAC,MAAM,GAAG,mBAC/B,8OAAC,mNAAA,CAAA,SAAM;gCAAC,UAAU;gCAAC,SAAS,IAAM,WAAW,OAAO,QAAM;gCAAI,SAAQ;0CAClE,cAAA,8OAAC,2NAAA,CAAA,kBAAe;oCAAC,WAAU;;;;;;;;;;;;;;;;;;eAdP;;;;;;;;;;AAsBpD"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/playlists/%5Bid%5D/PlaylistDetails.tsx"],"sourcesContent":["import { toTimeString, toTimeStringSeconds } from \"@/app/helpers/ms-convert\"\r\nimport { FullPlaylist } from \"@/types/Playlist\"\r\nimport { ArrowsRightLeftIcon } from \"@heroicons/react/16/solid\"\r\nimport { Button } from \"@nextui-org/react\"\r\n\r\ntype PlaylistDetailsProps = {\r\n    playlist: FullPlaylist,\r\n    setWarningOn: (warning: boolean) => void\r\n}\r\n\r\nexport default function PlaylistDetails(props: PlaylistDetailsProps) {\r\n    const { playlist, setWarningOn } = props\r\n    return (\r\n        <div className=\"w-1/4 flex flex-col m-2 p-4 space-y-4 items-center\">\r\n            <div className=\"font-bold underline\">Selected Playlist</div>\r\n            <img className=\"w-32 h-32\" src={playlist.details.images[0].url} />\r\n            <p>{playlist.details.name}</p>\r\n            <p>Length: {toTimeStringSeconds(playlist.details.seconds)}</p>\r\n            <Button color=\"primary\" onPress={() => setWarningOn(true)}>\r\n                <p>Switch Playlist</p>\r\n                <ArrowsRightLeftIcon className=\"w-6 h-6\"/>\r\n            </Button>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;AAGA;AADA;;;;;AAQe,SAAS,gBAAgB,KAA2B;IAC/D,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG;IACnC,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BAAsB;;;;;;0BACrC,8OAAC;gBAAI,WAAU;gBAAY,KAAK,SAAS,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG;;;;;;0BAC9D,8OAAC;0BAAG,SAAS,OAAO,CAAC,IAAI;;;;;;0BACzB,8OAAC;;oBAAE;oBAAS,CAAA,GAAA,sIAAA,CAAA,sBAAmB,AAAD,EAAE,SAAS,OAAO,CAAC,OAAO;;;;;;;0BACxD,8OAAC,mNAAA,CAAA,SAAM;gBAAC,OAAM;gBAAU,SAAS,IAAM,aAAa;;kCAChD,8OAAC;kCAAE;;;;;;kCACH,8OAAC,mOAAA,CAAA,sBAAmB;wBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI/C"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/playlists/%5Bid%5D/BuilderConfiguration.tsx"],"sourcesContent":["\"use client\"\r\nimport { toSecs } from \"@/app/helpers/ms-convert\"\r\nimport { ChevronLeftIcon } from \"@heroicons/react/16/solid\"\r\nimport { Button, Input } from \"@nextui-org/react\"\r\nimport { useState } from \"react\"\r\n\r\ntype BuilderConfigurationProps = {\r\n    onSubmit: (desiredLength: number, weightingFunction: Function) => void\r\n}\r\n\r\ntype WeightingFunction = (index: number, playlistSize: number) => number\r\n\r\ntype WeightingSystem = {\r\n    name: string,\r\n    image: string,\r\n    function: WeightingFunction\r\n}\r\n\r\nexport default function BuilderConfiguration(props: BuilderConfigurationProps) {\r\n    const { onSubmit } = props\r\n    const [desiredLength, setDesireLength] = useState<string>(\"\")\r\n\r\n    const weightingSystems: WeightingSystem[] = [\r\n        {name: \"Unweighted\", image: \"/UnweightedGraph.png\", function: (index, size) => 1  },\r\n        {name: \"Inverse\", image: \"/InverseGraph.png\", function: (index, size) => 1 / (index + 1) },\r\n        {name: \"Linear\", image: \"/LinearGraph.png\", function: (index, size) => size - index },\r\n    ]\r\n    const [weightingIndex, setWeightingIndex] = useState(0)\r\n\r\n    const left = () => {\r\n        const newIndex = weightingIndex == 0 ?  weightingSystems.length -1 : weightingIndex - 1\r\n        setWeightingIndex(newIndex)\r\n    }\r\n    const right = () => {\r\n        const newIndex = weightingIndex == weightingSystems.length - 1 ? 0 : weightingIndex + 1\r\n        setWeightingIndex(newIndex)\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-1/4 flex flex-col m-8 space-y-4 items-center\">\r\n            <p className=\"font-bold underline\">Configuration</p>\r\n            <p>Select your desired weighting scheme below</p>\r\n            <p>(x: track number, y: preference in final playlist) </p>\r\n            <div className=\"flex flex-row space-x-4 items-center justify-center\">\r\n                <Button isIconOnly onPress={() => left() } variant=\"light\">\r\n                    <ChevronLeftIcon className=\"w-8 h-8\" />\r\n                </Button>\r\n                <p className=\"w-24 text-center\">{weightingSystems[weightingIndex].name}</p>\r\n                <Button isIconOnly onPress={() => right()} variant=\"light\">\r\n                    <ChevronLeftIcon className=\"w-8 h-8 rotate-180\" />\r\n                </Button>\r\n            </div>\r\n            <img className=\"w-64 h-64\" src={weightingSystems[weightingIndex].image} />\r\n            <Input\r\n                value={desiredLength}\r\n                onValueChange={setDesireLength}\r\n                isRequired\r\n                label=\"Desired Time\"\r\n                pattern=\"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$\"\r\n                endContent={\r\n                    <div className=\"pointer-events-none flex items-center\">\r\n                        <span className=\"text-default-400 text-small\">hh:mm:ss</span>\r\n                    </div>\r\n                }\r\n            />\r\n            <Button color=\"primary\" isDisabled={!desiredLength.length} onPress={() => onSubmit(toSecs(desiredLength), weightingSystems[weightingIndex].function)}>Submit Playlist</Button>\r\n        </div>\r\n    )\r\n}"],"names":[],"mappings":";;;;AACA;AAGA;AADA;AADA;AACA;AAHA;;;;;;AAkBe,SAAS,qBAAqB,KAAgC;IACzE,MAAM,EAAE,QAAQ,EAAE,GAAG;IACrB,MAAM,CAAC,eAAe,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAE1D,MAAM,mBAAsC;QACxC;YAAC,MAAM;YAAc,OAAO;YAAwB,UAAU,CAAC,OAAO,OAAS;QAAG;QAClF;YAAC,MAAM;YAAW,OAAO;YAAqB,UAAU,CAAC,OAAO,OAAS,IAAI,CAAC,QAAQ,CAAC;QAAE;QACzF;YAAC,MAAM;YAAU,OAAO;YAAoB,UAAU,CAAC,OAAO,OAAS,OAAO;QAAM;KACvF;IACD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,OAAO;QACT,MAAM,WAAW,kBAAkB,IAAK,iBAAiB,MAAM,GAAE,IAAI,iBAAiB;QACtF,kBAAkB;IACtB;IACA,MAAM,QAAQ;QACV,MAAM,WAAW,kBAAkB,iBAAiB,MAAM,GAAG,IAAI,IAAI,iBAAiB;QACtF,kBAAkB;IACtB;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAE,WAAU;0BAAsB;;;;;;0BACnC,8OAAC;0BAAE;;;;;;0BACH,8OAAC;0BAAE;;;;;;0BACH,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,mNAAA,CAAA,SAAM;wBAAC,UAAU;wBAAC,SAAS,IAAM;wBAAS,SAAQ;kCAC/C,cAAA,8OAAC,2NAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;;;;;;kCAE/B,8OAAC;wBAAE,WAAU;kCAAoB,gBAAgB,CAAC,eAAe,CAAC,IAAI;;;;;;kCACtE,8OAAC,mNAAA,CAAA,SAAM;wBAAC,UAAU;wBAAC,SAAS,IAAM;wBAAS,SAAQ;kCAC/C,cAAA,8OAAC,2NAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGnC,8OAAC;gBAAI,WAAU;gBAAY,KAAK,gBAAgB,CAAC,eAAe,CAAC,KAAK;;;;;;0BACtE,8OAAC,gNAAA,CAAA,QAAK;gBACF,OAAO;gBACP,eAAe;gBACf,UAAU;gBACV,OAAM;gBACN,SAAQ;gBACR,0BACI,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAK,WAAU;kCAA8B;;;;;;;;;;;;;;;;0BAI1D,8OAAC,mNAAA,CAAA,SAAM;gBAAC,OAAM;gBAAU,YAAY,CAAC,cAAc,MAAM;gBAAE,SAAS,IAAM,SAAS,CAAA,GAAA,sIAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,gBAAgB,CAAC,eAAe,CAAC,QAAQ;0BAAG;;;;;;;;;;;;AAGlK"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/playlists/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport getCookies from \"@/app/helpers/get-cookies\";\r\nimport { FullPlaylist } from \"@/types/Playlist\";\r\nimport { Button, Modal, ModalBody, ModalContent, ModalFooter, ModalHeader } from \"@nextui-org/react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Tracks from \"./Tracks\";\r\nimport PlaylistDetails from \"./PlaylistDetails\";\r\nimport BuilderConfiguration from \"./BuilderConfiguration\";\r\nimport { Track } from \"@/types/Track\";\r\nimport { Cookies } from \"@/types/cookies\";\r\n\r\n\r\nexport default function Playlist({params}: any) {\r\n    const router = useRouter()\r\n\r\n    const [warningOn, setWarningOn] = useState(false)\r\n    const [cookies, setCookies] = useState<Cookies | null>();\r\n    const [submission, setSubmission] = useState<{\r\n        desiredLength: number,\r\n        weightingFunction: Function\r\n    } | null>();\r\n\r\n    useEffect(() => {\r\n        const setCookieState = async () => {\r\n            const cookieStore = getCookies();\r\n            setCookies(cookieStore);\r\n        }\r\n        setCookieState()\r\n    }, [])\r\n\r\n    const [playlist, setPlaylist] = useState<FullPlaylist>()\r\n    useEffect(() => {\r\n        const fetchPlaylist = async () => {\r\n            const { id } = await params;\r\n            const cookies = getCookies();\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/spotify/playlists/${id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${cookies.accessToken}`\r\n                }\r\n            });\r\n            const fullPlaylist = await response.json()\r\n            setPlaylist(fullPlaylist)\r\n        }\r\n        fetchPlaylist()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!submission) {\r\n            return\r\n        }\r\n        const postPlaylist = async (tracks?: Track[]) => {\r\n            const body = {\r\n                tracks: tracks,\r\n                length: submission.desiredLength,\r\n                userId: cookies?.userId\r\n            }\r\n            console.log(\"Fetching: \", body)\r\n\r\n            const res = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/knapsack/playlist`, \r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const json = await res.json()\r\n            const customId = json.id\r\n            router.push(`/playlists/custom/${customId}`)\r\n        }\r\n\r\n        const weightedTracks: Track[] = playlist ? playlist.tracks.map((track, index) => {\r\n            return {\r\n                ...track,\r\n                weight: submission.weightingFunction(index, playlist.tracks.length)\r\n            }\r\n        }) : []\r\n\r\n        postPlaylist(weightedTracks)\r\n\r\n    }, [submission])\r\n\r\n    if (!playlist) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    const onClose = () => { setWarningOn(false) }\r\n\r\n    const onSubmit = (desiredLength: number, weightingFunction: Function) => {\r\n        setSubmission({\r\n            desiredLength: desiredLength,\r\n            weightingFunction: weightingFunction\r\n        })\r\n    }\r\n\r\n    // const onSubmit = (desiredLength: number, weightingFunction: Function) => {\r\n    //     const postPlaylist = async (tracks: Track[]) => {\r\n    //         const body = {\r\n    //             tracks: tracks,\r\n    //             length: desiredLength,\r\n    //             userId: cookies?.userId\r\n    //         }\r\n\r\n    //         const res = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/knapsack/playlist`, \r\n    //         {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json'\r\n    //             },\r\n    //             body: JSON.stringify(body)\r\n    //         })\r\n\r\n    //         return res.json()\r\n    //     }\r\n        \r\n    //     const simpleTracks: Track[] = playlist.tracks.map((track, index) => {\r\n    //         return {\r\n    //             ...track,\r\n    //             weight: weightingFunction(index, playlist.tracks.length)\r\n    //         }\r\n    //     })\r\n\r\n    //     const customId = postPlaylist(simpleTracks)\r\n    //     router.push(`/playlists/custom/${customId}`)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex h-full flex-row text-white\">\r\n                <PlaylistDetails playlist={playlist} setWarningOn={setWarningOn} />\r\n                <Tracks playlist={playlist} setPlaylist={setPlaylist} />\r\n                <BuilderConfiguration onSubmit={onSubmit}/>\r\n            </div>\r\n            <Modal isOpen={warningOn} onClose={onClose}>\r\n                <ModalContent>\r\n                    {(onClose) => (\r\n                        <div className=\"text-white\">\r\n                            <ModalHeader>Are you sure you want to leave this page?</ModalHeader>\r\n                            <ModalBody>\r\n                                <p>Any changes will not be saved.</p>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button color=\"danger\" onPress={onClose}>Cancel</Button>\r\n                                <Button color=\"primary\" onPress={() => router.push('/playlists')}>Leave</Button>\r\n                            </ModalFooter>\r\n                        </div>\r\n                    )}\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    ) \r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}