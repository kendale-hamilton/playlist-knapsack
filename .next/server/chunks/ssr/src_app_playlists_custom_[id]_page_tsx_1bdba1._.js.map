{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/playlists/custom/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\nimport getCookies from \"@/app/helpers/get-cookies\";\r\nimport { Track } from \"@/types/Track\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function CustomPlaylist({params}: any){\r\n    const [tracks, setTracks] = useState<Track[]>()\r\n    useEffect(() => {\r\n        const fetchCustomPlaylist = async () => {\r\n            const { id } = await params;\r\n            console.log(\"Fetching playlist: \", id)\r\n            const cookies = getCookies();\r\n            const response = await fetch(`${process.env.NEXT_PUBLIC_BACKEND_URL}/knapsack/playlists/${cookies.userId}/${id}`)\r\n            console.log(\"Response: \", response)\r\n            const customPlaylist = await response.json()\r\n            console.log(\"Response: \", customPlaylist)\r\n            setTracks(customPlaylist)\r\n        }\r\n\r\n        fetchCustomPlaylist()\r\n    }, [])\r\n\r\n    if (!tracks) {\r\n        return <div>Loading...</div>\r\n    }\r\n    console.log(tracks)\r\n\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            \r\n        </div>\r\n    )\r\n\r\n}"],"names":[],"mappings":";;;;AACA;AAEA;AAHA;;;;AAMe,SAAS,eAAe,EAAC,MAAM,EAAM;IAChD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IACnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,sBAAsB;YACxB,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;YACrB,QAAQ,GAAG,CAAC,uBAAuB;YACnC,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAU,AAAD;YACzB,MAAM,WAAW,MAAM,MAAM,iEAAuC,oBAAoB,EAAE,QAAQ,MAAM,CAAC,CAAC,EAAE,IAAI;YAChH,QAAQ,GAAG,CAAC,cAAc;YAC1B,MAAM,iBAAiB,MAAM,SAAS,IAAI;YAC1C,QAAQ,GAAG,CAAC,cAAc;YAC1B,UAAU;QACd;QAEA;IACJ,GAAG,EAAE;IAEL,IAAI,CAAC,QAAQ;QACT,qBAAO,8OAAC;sBAAI;;;;;;IAChB;IACA,QAAQ,GAAG,CAAC;IAEZ,qBACI,8OAAC;QAAI,WAAU;;;;;;AAKvB"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}