{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/src/app/api/callback/page.tsx"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport querystring from 'querystring';\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    const { code, state } = req.query;\r\n\r\n    console.log({ code, state });\r\n\r\n    if (!state) {\r\n        return res.status(400).json({ error: 'State parameter is missing' });\r\n    }\r\n\r\n    const authOptions = {\r\n        url: 'https://accounts.spotify.com/api/token',\r\n        form: {\r\n            code: code as string,\r\n            redirect_uri: \"http://localhost:3000/api/callback\",\r\n            grant_type: 'authorization_code'\r\n        },\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n            'Authorization': 'Basic ' + Buffer.from(`${process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_ID}:${process.env.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET}`).toString('base64')\r\n        },\r\n        json: true\r\n    };\r\n\r\n    try {\r\n        const response = await fetch(authOptions.url, {\r\n            method: 'POST',\r\n            headers: authOptions.headers,\r\n            body: querystring.stringify(authOptions.form)\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log('Token response:', data);\r\n\r\n        if (response.ok) {\r\n            // Handle successful token exchange\r\n            return res.status(200).json(data);\r\n        } else {\r\n            // Handle error response\r\n            return res.status(response.status).json(data);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching token:', error);\r\n        return res.status(500).json({ error: 'Internal Server Error' });\r\n    }\r\n}"],"names":[],"mappings":";;;AACA;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,KAAK;IAEjC,QAAQ,GAAG,CAAC;QAAE;QAAM;IAAM;IAE1B,IAAI,CAAC,OAAO;QACR,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IACtE;IAEA,MAAM,cAAc;QAChB,KAAK;QACL,MAAM;YACF,MAAM;YACN,cAAc;YACd,YAAY;QAChB;QACA,SAAS;YACL,gBAAgB;YAChB,iBAAiB,WAAW,OAAO,IAAI,CAAC,wEAA6C,CAAC,wEAAiD,EAAE,QAAQ,CAAC;QACtJ;QACA,MAAM;IACV;IAEA,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,YAAY,GAAG,EAAE;YAC1C,QAAQ;YACR,SAAS,YAAY,OAAO;YAC5B,MAAM,+GAAA,CAAA,UAAW,CAAC,SAAS,CAAC,YAAY,IAAI;QAChD;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,IAAI,SAAS,EAAE,EAAE;YACb,mCAAmC;YACnC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;QAChC,OAAO;YACH,wBAAwB;YACxB,OAAO,IAAI,MAAM,CAAC,SAAS,MAAM,EAAE,IAAI,CAAC;QAC5C;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IACjE;AACJ"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/VSCodeRepos/playlist-knapsack/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkBA,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAWd,8BAA8B;IAI5BO,SAASC;;;;;;;;IACTC,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,iCAAoC;QAElD,YAAA;YAAA;YAAA,wCAA4D;gBAC5D,OAAO,KAAA;oBAAMC;oBAAAA,EAAc,IAAIX,mBAAmB;4BAChDY,QAAAA;4BAAAA,GAAY;4BAAA;iCACVC,MAAMZ,UAAUa,QAAQ;sCACxBC,IAAAA,CAAM,CAAA;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACNC,UAAU;;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAY;;iBACZC,UAAU;sBACVC,IAAAA,CAAAA;YAAAA,CAAU;SAAA,CAAE;;KACd;UACAC,QAAAA;YAAAA,CAAU,GAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,WAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,eAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}